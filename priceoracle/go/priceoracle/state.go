// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package priceoracle

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ArrayOfImmutableAgentID struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableAgentID) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableAgentID) GetAgentID(index uint32) wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(a.proxy.Index(index))
}

type MapAgentIDToImmutableBool struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToImmutableBool) GetBool(key wasmtypes.ScAgentID) wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type MapAgentIDToImmutableUint64 struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToImmutableUint64) GetUint64(key wasmtypes.ScAgentID) wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type MapAgentIDToImmutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToImmutableInt64) GetInt64(key wasmtypes.ScAgentID) wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type ImmutablepriceoracleState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutablepriceoracleState) ApprovedList() ArrayOfImmutableAgentID {
	return ArrayOfImmutableAgentID{proxy: s.proxy.Root(StateApprovedList)}
}

func (s ImmutablepriceoracleState) ApprovedMap() MapAgentIDToImmutableBool {
	return MapAgentIDToImmutableBool{proxy: s.proxy.Root(StateApprovedMap)}
}

func (s ImmutablepriceoracleState) LastPrice() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(StateLastPrice))
}

func (s ImmutablepriceoracleState) OracleLastUpdate() MapAgentIDToImmutableUint64 {
	return MapAgentIDToImmutableUint64{proxy: s.proxy.Root(StateOracleLastUpdate)}
}

func (s ImmutablepriceoracleState) OraclePrice() MapAgentIDToImmutableInt64 {
	return MapAgentIDToImmutableInt64{proxy: s.proxy.Root(StateOraclePrice)}
}

func (s ImmutablepriceoracleState) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(StateOwner))
}

type ArrayOfMutableAgentID struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableAgentID) AppendAgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(a.proxy.Append())
}

func (a ArrayOfMutableAgentID) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableAgentID) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableAgentID) GetAgentID(index uint32) wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(a.proxy.Index(index))
}

type MapAgentIDToMutableBool struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToMutableBool) Clear() {
	m.proxy.ClearMap()
}

func (m MapAgentIDToMutableBool) GetBool(key wasmtypes.ScAgentID) wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type MapAgentIDToMutableUint64 struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToMutableUint64) Clear() {
	m.proxy.ClearMap()
}

func (m MapAgentIDToMutableUint64) GetUint64(key wasmtypes.ScAgentID) wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type MapAgentIDToMutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToMutableInt64) Clear() {
	m.proxy.ClearMap()
}

func (m MapAgentIDToMutableInt64) GetInt64(key wasmtypes.ScAgentID) wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type MutablepriceoracleState struct {
	proxy wasmtypes.Proxy
}

func (s MutablepriceoracleState) AsImmutable() ImmutablepriceoracleState {
	return ImmutablepriceoracleState(s)
}

func (s MutablepriceoracleState) ApprovedList() ArrayOfMutableAgentID {
	return ArrayOfMutableAgentID{proxy: s.proxy.Root(StateApprovedList)}
}

func (s MutablepriceoracleState) ApprovedMap() MapAgentIDToMutableBool {
	return MapAgentIDToMutableBool{proxy: s.proxy.Root(StateApprovedMap)}
}

func (s MutablepriceoracleState) LastPrice() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(StateLastPrice))
}

func (s MutablepriceoracleState) OracleLastUpdate() MapAgentIDToMutableUint64 {
	return MapAgentIDToMutableUint64{proxy: s.proxy.Root(StateOracleLastUpdate)}
}

func (s MutablepriceoracleState) OraclePrice() MapAgentIDToMutableInt64 {
	return MapAgentIDToMutableInt64{proxy: s.proxy.Root(StateOraclePrice)}
}

func (s MutablepriceoracleState) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(StateOwner))
}
