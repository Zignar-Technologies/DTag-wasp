// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package main

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmclient"

const (
	ArgAgentid = "agentid"
	ArgOwner   = "owner"
	ArgPrice   = "price"

	ResOwner = "owner"
	ResPrice = "price"
)

///////////////////////////// approveOracle /////////////////////////////

type ApproveOracleFunc struct {
	wasmclient.ClientFunc
	args wasmclient.Arguments
}

func (f *ApproveOracleFunc) Agentid(v wasmclient.AgentID) {
	f.args.Set(ArgAgentid, f.args.FromAgentID(v))
}

func (f *ApproveOracleFunc) Post() wasmclient.Request {
	f.args.Mandatory(ArgAgentid)
	return f.ClientFunc.Post(0x8b446340, &f.args)
}

///////////////////////////// init /////////////////////////////

type InitFunc struct {
	wasmclient.ClientFunc
	args wasmclient.Arguments
}

func (f *InitFunc) Owner(v wasmclient.AgentID) {
	f.args.Set(ArgOwner, f.args.FromAgentID(v))
}

func (f *InitFunc) Post() wasmclient.Request {
	return f.ClientFunc.Post(0x1f44d644, &f.args)
}

///////////////////////////// setMiotaPrice /////////////////////////////

type SetMiotaPriceFunc struct {
	wasmclient.ClientFunc
	args wasmclient.Arguments
}

func (f *SetMiotaPriceFunc) Price(v int64) {
	f.args.Set(ArgPrice, f.args.FromInt64(v))
}

func (f *SetMiotaPriceFunc) Post() wasmclient.Request {
	f.args.Mandatory(ArgPrice)
	return f.ClientFunc.Post(0x6a3062ba, &f.args)
}

///////////////////////////// setOwner /////////////////////////////

type SetOwnerFunc struct {
	wasmclient.ClientFunc
	args wasmclient.Arguments
}

func (f *SetOwnerFunc) Owner(v wasmclient.AgentID) {
	f.args.Set(ArgOwner, f.args.FromAgentID(v))
}

func (f *SetOwnerFunc) Post() wasmclient.Request {
	f.args.Mandatory(ArgOwner)
	return f.ClientFunc.Post(0x2a15fe7b, &f.args)
}

///////////////////////////// getMiotaPrice /////////////////////////////

type GetMiotaPriceView struct {
	wasmclient.ClientView
}

func (f *GetMiotaPriceView) Call() GetMiotaPriceResults {
	f.ClientView.Call("getMiotaPrice", nil)
	return GetMiotaPriceResults{res: f.Results()}
}

type GetMiotaPriceResults struct {
	res wasmclient.Results
}

func (r *GetMiotaPriceResults) Price() int64 {
	return r.res.ToInt64(r.res.Get(ResPrice))
}

///////////////////////////// getOwner /////////////////////////////

type GetOwnerView struct {
	wasmclient.ClientView
}

func (f *GetOwnerView) Call() GetOwnerResults {
	f.ClientView.Call("getOwner", nil)
	return GetOwnerResults{res: f.Results()}
}

type GetOwnerResults struct {
	res wasmclient.Results
}

func (r *GetOwnerResults) Owner() wasmclient.AgentID {
	return r.res.ToAgentID(r.res.Get(ResOwner))
}

///////////////////////////// PriceoracleService /////////////////////////////

type PriceoracleService struct {
	wasmclient.Service
}

func NewPriceoracleService(cl *wasmclient.ServiceClient, chainID string) (*PriceoracleService, error) {
	s := &PriceoracleService{}
	err := s.Service.Init(cl, chainID, 0xb2c5d36a)
	return s, err
}

func (s *PriceoracleService) NewEventHandler() *PriceoracleEvents {
	return &PriceoracleEvents{}
}

func (s *PriceoracleService) ApproveOracle() ApproveOracleFunc {
	return ApproveOracleFunc{ClientFunc: s.AsClientFunc()}
}

func (s *PriceoracleService) Init() InitFunc {
	return InitFunc{ClientFunc: s.AsClientFunc()}
}

func (s *PriceoracleService) SetMiotaPrice() SetMiotaPriceFunc {
	return SetMiotaPriceFunc{ClientFunc: s.AsClientFunc()}
}

func (s *PriceoracleService) SetOwner() SetOwnerFunc {
	return SetOwnerFunc{ClientFunc: s.AsClientFunc()}
}

func (s *PriceoracleService) GetMiotaPrice() GetMiotaPriceView {
	return GetMiotaPriceView{ClientView: s.AsClientView()}
}

func (s *PriceoracleService) GetOwner() GetOwnerView {
	return GetOwnerView{ClientView: s.AsClientView()}
}
