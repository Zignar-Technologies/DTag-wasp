// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package giveaway

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type ArrayOfImmutableString struct {
	objID int32
}

func (a ArrayOfImmutableString) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfImmutableString) GetString(index int32) wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(a.objID, wasmlib.Key32(index))
}

type ImmutablegiveawayState struct {
	id int32
}

func (s ImmutablegiveawayState) Addresses() ArrayOfImmutableString {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateAddresses], wasmlib.TYPE_ARRAY|wasmlib.TYPE_STRING)
	return ArrayOfImmutableString{objID: arrID}
}

func (s ImmutablegiveawayState) Owner() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxStateOwner])
}

type ArrayOfMutableString struct {
	objID int32
}

func (a ArrayOfMutableString) Clear() {
	wasmlib.Clear(a.objID)
}

func (a ArrayOfMutableString) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfMutableString) GetString(index int32) wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(a.objID, wasmlib.Key32(index))
}

type MutablegiveawayState struct {
	id int32
}

func (s MutablegiveawayState) AsImmutable() ImmutablegiveawayState {
	return ImmutablegiveawayState(s)
}

func (s MutablegiveawayState) Addresses() ArrayOfMutableString {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateAddresses], wasmlib.TYPE_ARRAY|wasmlib.TYPE_STRING)
	return ArrayOfMutableString{objID: arrID}
}

func (s MutablegiveawayState) Owner() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxStateOwner])
}
