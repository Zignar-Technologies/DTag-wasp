// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package giveaway

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ArrayOfImmutableString struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableString) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableString) GetString(index uint32) wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(a.proxy.Index(index))
}

type ImmutablegiveawayState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutablegiveawayState) Addresses() ArrayOfImmutableString {
	return ArrayOfImmutableString{proxy: s.proxy.Root(StateAddresses)}
}

func (s ImmutablegiveawayState) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(StateOwner))
}

type ArrayOfMutableString struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableString) AppendString() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(a.proxy.Append())
}

func (a ArrayOfMutableString) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableString) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableString) GetString(index uint32) wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(a.proxy.Index(index))
}

type MutablegiveawayState struct {
	proxy wasmtypes.Proxy
}

func (s MutablegiveawayState) AsImmutable() ImmutablegiveawayState {
	return ImmutablegiveawayState(s)
}

func (s MutablegiveawayState) Addresses() ArrayOfMutableString {
	return ArrayOfMutableString{proxy: s.proxy.Root(StateAddresses)}
}

func (s MutablegiveawayState) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(StateOwner))
}
