// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package giveaway

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableInitParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableInitParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutableLoadAddressesParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableLoadAddressesParams) Addresses() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamAddresses))
}

type MutableLoadAddressesParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableLoadAddressesParams) Addresses() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamAddresses))
}

type ImmutableRuffleParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableRuffleParams) NWinners() wasmtypes.ScImmutableInt16 {
	return wasmtypes.NewScImmutableInt16(s.proxy.Root(ParamNWinners))
}

type MutableRuffleParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableRuffleParams) NWinners() wasmtypes.ScMutableInt16 {
	return wasmtypes.NewScMutableInt16(s.proxy.Root(ParamNWinners))
}

type ImmutableSetOwnerParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableSetOwnerParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableSetOwnerParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableSetOwnerParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}
