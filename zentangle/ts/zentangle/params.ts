// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmtypes from "wasmlib/wasmtypes";
import * as sc from "./index";

export class ImmutableCreateGameParams extends wasmtypes.ScProxy {
	description(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamDescription));
	}

	numberOfImages(): wasmtypes.ScImmutableUint32 {
		return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ParamNumberOfImages));
	}

	tagsRequiredPerImage(): wasmtypes.ScImmutableUint32 {
		return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ParamTagsRequiredPerImage));
	}
}

export class MutableCreateGameParams extends wasmtypes.ScProxy {
	description(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamDescription));
	}

	numberOfImages(): wasmtypes.ScMutableUint32 {
		return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ParamNumberOfImages));
	}

	tagsRequiredPerImage(): wasmtypes.ScMutableUint32 {
		return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ParamTagsRequiredPerImage));
	}
}

export class ImmutableEndGameParams extends wasmtypes.ScProxy {
	resetPlayerInfo(): wasmtypes.ScImmutableBool {
		return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ParamResetPlayerInfo));
	}
}

export class MutableEndGameParams extends wasmtypes.ScProxy {
	resetPlayerInfo(): wasmtypes.ScMutableBool {
		return new wasmtypes.ScMutableBool(this.proxy.root(sc.ParamResetPlayerInfo));
	}
}

export class ImmutableInitParams extends wasmtypes.ScProxy {
	owner(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamOwner));
	}
}

export class MutableInitParams extends wasmtypes.ScProxy {
	owner(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamOwner));
	}
}

export class ImmutableSendTagsParams extends wasmtypes.ScProxy {
	inputJson(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamInputJson));
	}
}

export class MutableSendTagsParams extends wasmtypes.ScProxy {
	inputJson(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamInputJson));
	}
}

export class ImmutableSetOwnerParams extends wasmtypes.ScProxy {
	owner(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamOwner));
	}
}

export class MutableSetOwnerParams extends wasmtypes.ScProxy {
	owner(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamOwner));
	}
}

export class ImmutableGetPlayerInfoParams extends wasmtypes.ScProxy {
	playerAddress(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamPlayerAddress));
	}
}

export class MutableGetPlayerInfoParams extends wasmtypes.ScProxy {
	playerAddress(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamPlayerAddress));
	}
}

export class ImmutableGetPlaysPerImageParams extends wasmtypes.ScProxy {
	imageId(): wasmtypes.ScImmutableUint32 {
		return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ParamImageId));
	}
}

export class MutableGetPlaysPerImageParams extends wasmtypes.ScProxy {
	imageId(): wasmtypes.ScMutableUint32 {
		return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ParamImageId));
	}
}

export class ImmutableGetResultsParams extends wasmtypes.ScProxy {
	imageId(): wasmtypes.ScImmutableUint32 {
		return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ParamImageId));
	}
}

export class MutableGetResultsParams extends wasmtypes.ScProxy {
	imageId(): wasmtypes.ScMutableUint32 {
		return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ParamImageId));
	}
}
