// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package testwasmlib

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableArrayOfArraysLengthResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableArrayOfArraysLengthResults) Length() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultLength))
}

type MutableArrayOfArraysLengthResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableArrayOfArraysLengthResults) Length() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultLength))
}

type ImmutableArrayOfArraysValueResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableArrayOfArraysValueResults) Value() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultValue))
}

type MutableArrayOfArraysValueResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableArrayOfArraysValueResults) Value() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultValue))
}

type ImmutableArrayOfMapsValueResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableArrayOfMapsValueResults) Value() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultValue))
}

type MutableArrayOfMapsValueResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableArrayOfMapsValueResults) Value() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultValue))
}

type ImmutableBlockRecordResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableBlockRecordResults) Record() wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(s.proxy.Root(ResultRecord))
}

type MutableBlockRecordResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableBlockRecordResults) Record() wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(s.proxy.Root(ResultRecord))
}

type ImmutableBlockRecordsResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableBlockRecordsResults) Count() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultCount))
}

type MutableBlockRecordsResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableBlockRecordsResults) Count() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultCount))
}

type ImmutableGetRandomResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetRandomResults) Random() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultRandom))
}

type MutableGetRandomResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetRandomResults) Random() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultRandom))
}

type ImmutableIotaBalanceResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableIotaBalanceResults) Iotas() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultIotas))
}

type MutableIotaBalanceResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableIotaBalanceResults) Iotas() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultIotas))
}

type ImmutableMapOfArraysLengthResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableMapOfArraysLengthResults) Length() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultLength))
}

type MutableMapOfArraysLengthResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableMapOfArraysLengthResults) Length() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultLength))
}

type ImmutableMapOfArraysValueResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableMapOfArraysValueResults) Value() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultValue))
}

type MutableMapOfArraysValueResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableMapOfArraysValueResults) Value() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultValue))
}

type ImmutableMapOfMapsValueResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableMapOfMapsValueResults) Value() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultValue))
}

type MutableMapOfMapsValueResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableMapOfMapsValueResults) Value() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultValue))
}
