// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]

use wasmlib::*;

pub const SC_NAME        : &str = "testwasmlib";
pub const SC_DESCRIPTION : &str = "Exercise several aspects of WasmLib";
pub const HSC_NAME       : ScHname = ScHname(0x89703a45);

pub const PARAM_ADDRESS      : &str = "address";
pub const PARAM_AGENT_ID     : &str = "agentID";
pub const PARAM_BLOCK_INDEX  : &str = "blockIndex";
pub const PARAM_BOOL         : &str = "bool";
pub const PARAM_BYTES        : &str = "bytes";
pub const PARAM_CHAIN_ID     : &str = "chainID";
pub const PARAM_COLOR        : &str = "color";
pub const PARAM_HASH         : &str = "hash";
pub const PARAM_HNAME        : &str = "hname";
pub const PARAM_INDEX        : &str = "index";
pub const PARAM_INDEX0       : &str = "index0";
pub const PARAM_INDEX1       : &str = "index1";
pub const PARAM_INT16        : &str = "int16";
pub const PARAM_INT32        : &str = "int32";
pub const PARAM_INT64        : &str = "int64";
pub const PARAM_INT8         : &str = "int8";
pub const PARAM_KEY          : &str = "key";
pub const PARAM_NAME         : &str = "name";
pub const PARAM_PARAM        : &str = "this";
pub const PARAM_RECORD_INDEX : &str = "recordIndex";
pub const PARAM_REQUEST_ID   : &str = "requestID";
pub const PARAM_STRING       : &str = "string";
pub const PARAM_UINT16       : &str = "uint16";
pub const PARAM_UINT32       : &str = "uint32";
pub const PARAM_UINT64       : &str = "uint64";
pub const PARAM_UINT8        : &str = "uint8";
pub const PARAM_VALUE        : &str = "value";

pub const RESULT_COUNT  : &str = "count";
pub const RESULT_IOTAS  : &str = "iotas";
pub const RESULT_LENGTH : &str = "length";
pub const RESULT_RANDOM : &str = "random";
pub const RESULT_RECORD : &str = "record";
pub const RESULT_VALUE  : &str = "value";

pub const STATE_ADDRESS_ARRAY_ARRAYS   : &str = "AddressArrayArrays";
pub const STATE_ADDRESS_ARRAYS         : &str = "AddressArrays";
pub const STATE_ADDRESS_MAP_ARRAYS     : &str = "AddressMapArrays";
pub const STATE_ADDRESS_MAPS           : &str = "AddressMaps";
pub const STATE_LAT_LONG               : &str = "latLong";
pub const STATE_RANDOM                 : &str = "random";
pub const STATE_STRING_ARRAY_OF_ARRAYS : &str = "stringArrayOfArrays";
pub const STATE_STRING_ARRAY_OF_MAPS   : &str = "stringArrayOfMaps";
pub const STATE_STRING_MAP_OF_ARRAYS   : &str = "stringMapOfArrays";
pub const STATE_STRING_MAP_OF_MAPS     : &str = "stringMapOfMaps";

pub const FUNC_ARRAY_OF_ARRAYS_APPEND : &str = "arrayOfArraysAppend";
pub const FUNC_ARRAY_OF_ARRAYS_CLEAR  : &str = "arrayOfArraysClear";
pub const FUNC_ARRAY_OF_ARRAYS_SET    : &str = "arrayOfArraysSet";
pub const FUNC_ARRAY_OF_MAPS_CLEAR    : &str = "arrayOfMapsClear";
pub const FUNC_ARRAY_OF_MAPS_SET      : &str = "arrayOfMapsSet";
pub const FUNC_MAP_OF_ARRAYS_APPEND   : &str = "mapOfArraysAppend";
pub const FUNC_MAP_OF_ARRAYS_CLEAR    : &str = "mapOfArraysClear";
pub const FUNC_MAP_OF_ARRAYS_SET      : &str = "mapOfArraysSet";
pub const FUNC_MAP_OF_MAPS_CLEAR      : &str = "mapOfMapsClear";
pub const FUNC_MAP_OF_MAPS_SET        : &str = "mapOfMapsSet";
pub const FUNC_PARAM_TYPES            : &str = "paramTypes";
pub const FUNC_RANDOM                 : &str = "random";
pub const FUNC_TRIGGER_EVENT          : &str = "triggerEvent";
pub const VIEW_ARRAY_OF_ARRAYS_LENGTH : &str = "arrayOfArraysLength";
pub const VIEW_ARRAY_OF_ARRAYS_VALUE  : &str = "arrayOfArraysValue";
pub const VIEW_ARRAY_OF_MAPS_VALUE    : &str = "arrayOfMapsValue";
pub const VIEW_BLOCK_RECORD           : &str = "blockRecord";
pub const VIEW_BLOCK_RECORDS          : &str = "blockRecords";
pub const VIEW_GET_RANDOM             : &str = "getRandom";
pub const VIEW_IOTA_BALANCE           : &str = "iotaBalance";
pub const VIEW_MAP_OF_ARRAYS_LENGTH   : &str = "mapOfArraysLength";
pub const VIEW_MAP_OF_ARRAYS_VALUE    : &str = "mapOfArraysValue";
pub const VIEW_MAP_OF_MAPS_VALUE      : &str = "mapOfMapsValue";

pub const HFUNC_ARRAY_OF_ARRAYS_APPEND : ScHname = ScHname(0x23f3a17e);
pub const HFUNC_ARRAY_OF_ARRAYS_CLEAR  : ScHname = ScHname(0xc826f36f);
pub const HFUNC_ARRAY_OF_ARRAYS_SET    : ScHname = ScHname(0x74d77052);
pub const HFUNC_ARRAY_OF_MAPS_CLEAR    : ScHname = ScHname(0x974adaae);
pub const HFUNC_ARRAY_OF_MAPS_SET      : ScHname = ScHname(0x9e7baa47);
pub const HFUNC_MAP_OF_ARRAYS_APPEND   : ScHname = ScHname(0x072902d4);
pub const HFUNC_MAP_OF_ARRAYS_CLEAR    : ScHname = ScHname(0xdcdbc582);
pub const HFUNC_MAP_OF_ARRAYS_SET      : ScHname = ScHname(0xcdbf9981);
pub const HFUNC_MAP_OF_MAPS_CLEAR      : ScHname = ScHname(0xd02a5431);
pub const HFUNC_MAP_OF_MAPS_SET        : ScHname = ScHname(0x353d577f);
pub const HFUNC_PARAM_TYPES            : ScHname = ScHname(0x6921c4cd);
pub const HFUNC_RANDOM                 : ScHname = ScHname(0xe86c97ca);
pub const HFUNC_TRIGGER_EVENT          : ScHname = ScHname(0xd5438ac6);
pub const HVIEW_ARRAY_OF_ARRAYS_LENGTH : ScHname = ScHname(0x5e918d60);
pub const HVIEW_ARRAY_OF_ARRAYS_VALUE  : ScHname = ScHname(0x41d5f686);
pub const HVIEW_ARRAY_OF_MAPS_VALUE    : ScHname = ScHname(0x77e1ef85);
pub const HVIEW_BLOCK_RECORD           : ScHname = ScHname(0xad13b2f8);
pub const HVIEW_BLOCK_RECORDS          : ScHname = ScHname(0x16e249ea);
pub const HVIEW_GET_RANDOM             : ScHname = ScHname(0x46263045);
pub const HVIEW_IOTA_BALANCE           : ScHname = ScHname(0x9d3920bd);
pub const HVIEW_MAP_OF_ARRAYS_LENGTH   : ScHname = ScHname(0x86379ff7);
pub const HVIEW_MAP_OF_ARRAYS_VALUE    : ScHname = ScHname(0x8dee3538);
pub const HVIEW_MAP_OF_MAPS_VALUE      : ScHname = ScHname(0x476c56e4);
